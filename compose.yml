services:
  app:  # for develop
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        user_name: $user_name
        group_name: $group_name
    image: wsgi
    container_name: wsgi.app
    tty: true
    volumes:
      - .:/home/$user_name/workspace
    working_dir: /home/$user_name/workspace
    ports:
      - "3022:22"   # ssh
      - "8000:8000"

  gunicorn.falcon:
    image: wsgi
    volumes:
      - .:/home/$user_name/workspace
    working_dir: /home/$user_name/workspace
    sysctls:
      - net.core.somaxconn=$somaxconn
      - net.ipv4.tcp_syncookies=0
    command: >
      gunicorn
        --config=conf/gunicorn.ini.py
        --chdir=wsgiapp
        --access-logfile=../log/wsgi/access.grunicorn.falcon.log
        --error-logfile=../log/wsgi/grunicorn.falcon.log
        falconwsgi:api

  gunicorn.flask:
    image: wsgi
    volumes:
      - .:/home/$user_name/workspace
    working_dir: /home/$user_name/workspace
    sysctls:
      - net.core.somaxconn=$somaxconn
      - net.ipv4.tcp_syncookies=0
    command: >
      gunicorn
        --config=conf/gunicorn.ini.py
        --chdir=wsgiapp
        --access-logfile=../log/wsgi/access.grunicorn.flask.log
        --error-logfile=../log/wsgi/grunicorn.flask.log
        flaskwsgi:api

  gunicorn.responder:
    image: wsgi
    volumes:
      - .:/home/$user_name/workspace
    working_dir: /home/$user_name/workspace
    sysctls:
      - net.core.somaxconn=$somaxconn
      - net.ipv4.tcp_syncookies=0
    command: >
      gunicorn
        --worker-class=uvicorn.workers.UvicornWorker
        --config=conf/gunicorn.ini.py
        --chdir=wsgiapp
        --access-logfile=../log/wsgi/access.grunicorn.responder.log
        --error-logfile=../log/wsgi/grunicorn.responder.log
        responderwsgi:api

  uwsgi.falcon:
    image: wsgi
    volumes:
      - .:/home/$user_name/workspace
    working_dir: /home/$user_name/workspace
    sysctls:
      - net.core.somaxconn=$somaxconn
      - net.ipv4.tcp_syncookies=0
    command: >
      uwsgi
        --chdir=wsgiapp
        --wsgi-file=falconwsgi.py
        --logto=log/wsgi/uwsgi.falcon.log
        conf/uwsgi.ini

  uwsgi.flask:
    image: wsgi
    volumes:
      - .:/home/$user_name/workspace
    working_dir: /home/$user_name/workspace
    sysctls:
      - net.core.somaxconn=$somaxconn
      - net.ipv4.tcp_syncookies=0
    command: >
      uwsgi
        --chdir=wsgiapp
        --wsgi-file=flaskwsgi.py
        --logto=log/wsgi/uwsgi.flask.log
        conf/uwsgi.ini

  uvicorn.fastapi:
    image: wsgi
    volumes:
      - .:/home/$user_name/workspace
    working_dir: /home/$user_name/workspace
    sysctls:
      - net.core.somaxconn=$somaxconn
      - net.ipv4.tcp_syncookies=0
    command: >
      uvicorn
        --host=0.0.0.0
        --port=8000
        --workers=4
        wsgiapp.fastapiasgi:app

  daphne.fastapi:
    image: wsgi
    volumes:
      - .:/home/$user_name/workspace
    working_dir: /home/$user_name/workspace
    sysctls:
      - net.core.somaxconn=$somaxconn
      - net.ipv4.tcp_syncookies=0
    command: >
      daphne
        --bind=0.0.0.0
        ----port=8000
        wsgiapp.fastapiasgi:app

  hypercorn.fastapi:
    image: wsgi
    volumes:
      - .:/home/$user_name/workspace
    working_dir: /home/$user_name/workspace
    sysctls:
      - net.core.somaxconn=$somaxconn
      - net.ipv4.tcp_syncookies=0
    command: >
      hypercorn
        --bind=0.0.0.0:8000
        --workers=4
        wsgiapp.fastapiasgi:app

  gunicorn.fastapi:
    image: wsgi
    volumes:
      - .:/home/$user_name/workspace
    working_dir: /home/$user_name/workspace
    sysctls:
      - net.core.somaxconn=$somaxconn
      - net.ipv4.tcp_syncookies=0
    command: >
      gunicorn
        --worker-class=uvicorn.workers.UvicornWorker
        --config=conf/gunicorn.ini.py
        --chdir=wsgiapp
        --access-logfile=../log/wsgi/access.grunicorn.fastapi.log
        --error-logfile=../log/wsgi/grunicorn.fastapi.log
        fastapiasgi:app

  stressor:
    build:
      context: ./stressor
      dockerfile: Dockerfile
    image: stressor
    container_name: stressor
    tty: true
